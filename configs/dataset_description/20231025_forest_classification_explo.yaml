_convert_: all  # For omegaconf struct to be converted to python dictionnaries
# classification_preprocessing_dict = {source_class_code_int: target_class_code_int},
# 3: medium vegetation -> vegetation
# 4: high vegetation -> vegetation
# 0: no processing --> unclassified
# 66: synthetic points --> noise (synthetic points are useful for specific modelling task on already classified data).
# We set them to noise so that they are ignored during training.
# Codes that should not have been in the data: 100, 101.

# Cf. https://github.com/IGNF/PureForestID-benchmark/blob/main/docs/DataCard.md
# We remap to BD Foret code ordered alphetically.
classification_preprocessing_dict:
  1: 10
  2: 10
  3: 4
  4: 3
  5: 12
  6: 11
  7: 9
  8: 8
  9: 8
  10: 6
  11: 7
  12: 13
  13: 2
  14: 1
  15: 1
  16: 1
  17: 1
  18: 5

# classification_dict = {code_int: name_str, ...} and MUST be sorted (increasing order).
classification_dict:
  1: "FF1G01-01_Chêne_décidus"
  2: "FF1G06-06_Chêne_sempervirent"
  3: "FF1-09-09_Hêtre"
  4: "FF1-10-10_Châtaignier"
  5: "FF1-14-14_Robinier"
  6: "FF2-51-51_Pin_maritime"
  7: "FF2-52-52_Pin_sylvestre"
  8: "FF2G53-53_Pin_laricio_Pin_noir"
  9: "FF2-57-57_Pin_alep"
  10: "FF2G61-61_Sapin"
  11: "FF2G61-61_Epicéa"
  12: "FF2-63-63-Mélèze"
  13: "FF2-64-64_Douglas"

# Input and output dims of neural net are dataset dependant:
d_in: 9
num_classes: 12

# Effective Num Sapmpler, Beta=0.999, calculation on area (km²)
class_weights: [0.20,0.67,1.48,0.13,0.21,0.38,0.21,0.42,0.80,6.68,0.17,0.65]

# Inverse Sqrt Freq, calculation on patch counts
# class_weights: [0.43,0.79,1.33,0.46,0.45,0.63,0.50,0.62,0.91,4.30,0.46,1.13]
