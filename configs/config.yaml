# @package _global_

seed: 12345

# Task at hand. Can be train, decide, or tune  
task: train
fit_the_model: true
test_the_model: false

# path to original working directory
# hydra hijacks working directory by changing it to the current log directory,
# so it's useful to have this path as a special variable
# learn more here: https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
work_dir: ${hydra:runtime.cwd}

# path to folder with data
lasfiles_dir: ${oc.env:LASFILES_DIR}
metadata_shapefile: ${oc.env:METADATA_SHAPEFILE}
logfile_dir: ${oc.env:LOGS_DIR}

# use `python run.py debug=true` for easy debugging!
# this will run 1 train, val and test loop with only 1 batch
# equivalent to running `python run.py trainer.fast_dev_run=true`
# (this is placed here just for easier access from command line)
debug: False

# pretty print config at the start of the run using Rich library
print_config: True

# disable python warnings if they annoy you
ignore_warnings: True

# specify here default training configuration
defaults:
  - trainer: default.yaml
  - model: point_net_model.yaml
  - datamodule: datamodule.yaml
  - callbacks: callbacks.yaml # set this to null if you don't want to use callbacks
  
  - logger: comet # set logger here or use command line (e.g. `python run.py logger=wandb`)
  
  - prediction: default.yaml
  - optimize: default.yaml

  - experiment: null
  - hparams_search: null

  - hydra: default.yaml

  # enable color logging
  - override hydra/hydra_logging: colorlog
  - override hydra/job_logging: colorlog
