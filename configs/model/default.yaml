_target_: lidar_multiclass.models.model.Model

## Inputs and outputs
d_in: 9  # XYZ (3) + Other features (N)
num_classes: 6

# Architecture defined in sub-configs
ckpt_path: null  # str, for resuming training and finetuning.
neural_net_class_name: ???
neural_net_hparams: ???

## Evaluation metric - partial for triple init
iou:
  _target_: functools.partial
  _args_:
    - "${get_method:torchmetrics.JaccardIndex}"
    - ${model.num_classes}
  absent_score: 1.0

## Optimization
criterion: 
  _target_: torch.nn.CrossEntropyLoss
  label_smoothing: 0.0

lr: 0.004566395347136576  # 200-long LR-test-range betw 10^-4 and 3.0
momentum: 0.9  # arbitrary
monitor: "val/loss_epoch"

defaults:
  - optimizer: Adam.yaml
  - lr_scheduler: ReduceLROnPlateau.yaml
