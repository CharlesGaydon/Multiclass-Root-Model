# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
import os
import sys
from unittest import mock

sys.path.insert(0, os.path.abspath("./../../"))

from package_metadata import __version__, __author__, __name__

# -- Project information -----------------------------------------------------

release = __version__
project = __name__
author = __author__
copyright = "2021, Institut National de l'Information Géographique et Forestière"


# -- General configuration ---------------------------------------------------

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
language = "en"

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    "sphinx.ext.napoleon",  # Supports google-style docstrings
    "sphinx.ext.autodoc",  # auto-generates doc fgrom docstrings
    "sphinx.ext.doctest",  # tests code in docstrings - used by pytorch lightning
    "sphinx.ext.viewcode",  # creates links to view code sources in a new web page
    "sphinx.ext.githubpages",  # creates .nojekyll file to publish the doc on GitHub Pages.
    "myst_parser",  # supports markdown syntax for doc pages
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ["_templates"]

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme = "sphinx_rtd_theme"

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ["_static"]


try:
    import torch  # noqa
except ImportError:
    to_mock = [
        "torch",
        "comet_ml",
        "numpy",
        "pytorch_lightning",
        "tqdm",
        "pdal",
        "hydra",
        "torch_geometric",
        "omegaconf",
        "dotenv",
        "rich",
        "rich.syntax",
        "torch_points_kernels",
        "torch_geometric",
        "torch_geometric.nn",
        "torch_geometric.data",
        "torch_geometric.nn.glob",
        "torch_geometric.transforms",
        "torchmetrics",
        "torchvision",
        "torch.nn",
        "torch.nn.parallel",
        "torch.distributed",
        "torch.multiprocessing",
        "torch.autograd",
        "torch.autograd.function",
        "torch.nn.modules",
        "torch.nn.modules.utils",
        "torch.utils",
        "torch.utils.data",
        "torch.onnx",
        "torchvision",
        "torchvision.ops",
    ]
    for m in to_mock:
        sys.modules[m] = mock.Mock(name=m)
    sys.modules["torch"].__version__ = "1.10"  # fake version
    HAS_TORCH = False

    autodoc_mock_imports = []
    for m in to_mock:
        autodoc_mock_imports.append(m)
else:
    HAS_TORCH = True
