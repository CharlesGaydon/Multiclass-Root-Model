From 6f49d6138bc821e497be24544cac175d09a161af Mon Sep 17 00:00:00 2001
From: Michel Daab <michel.daab@ign.fr>
Date: Thu, 18 Nov 2021 14:35:15 +0100
Subject: [PATCH] Won't try to use a .las file that isn't in the directory
 specified in .env

---
 semantic_val/datamodules/datamodule.py        | 31 +++++++++----------
 .../datasets/SemValBuildings202110.py         |  8 ++++-
 2 files changed, 22 insertions(+), 17 deletions(-)

diff --git a/semantic_val/datamodules/datamodule.py b/semantic_val/datamodules/datamodule.py
index eb75311..2675018 100755
--- a/semantic_val/datamodules/datamodule.py
+++ b/semantic_val/datamodules/datamodule.py
@@ -1,4 +1,5 @@
 import glob
+import os
 import os.path as osp
 import random
 from typing import Optional, Iterator, Optional
@@ -66,24 +67,22 @@ class DataModule(LightningDataModule):
         Stratify train/val/test data if needed.
         Nota: Do not use it to assign state (self.x = y). This method is called only from a single GPU.
         """
+        if osp.exists(self.datasplit_csv_filepath):
+            os.remove(self.datasplit_csv_filepath)
 
-        las_filepaths = glob.glob(osp.join(self.lasfiles_dir, "*.las"))
-        assert len(las_filepaths) == 150
-
-        if not osp.exists(self.datasplit_csv_filepath):
-            if not osp.exists(self.metadata_shapefile_filepath):
-                raise FileNotFoundError(
-                    f"Metadata shapefile not found at {self.metadata_shapefile_filepath}"
-                )
-            make_datasplit_csv(
-                self.lasfiles_dir,
-                self.metadata_shapefile_filepath,
-                self.datasplit_csv_filepath,
-                train_frac=self.train_frac,
-            )
-            log.info(
-                f"Stratified split of dataset saved to {self.datasplit_csv_filepath}"
+        if not osp.exists(self.metadata_shapefile_filepath):
+            raise FileNotFoundError(
+                f"Metadata shapefile not found at {self.metadata_shapefile_filepath}"
             )
+        make_datasplit_csv(
+            self.lasfiles_dir,
+            self.metadata_shapefile_filepath,
+            self.datasplit_csv_filepath,
+            train_frac=self.train_frac,
+        )
+        log.info(
+            f"Stratified split of dataset saved to {self.datasplit_csv_filepath}"
+        )
 
     def setup(self, stage: Optional[str] = None):
         """
diff --git a/semantic_val/datamodules/datasets/SemValBuildings202110.py b/semantic_val/datamodules/datasets/SemValBuildings202110.py
index e850bab..bfd91b9 100755
--- a/semantic_val/datamodules/datasets/SemValBuildings202110.py
+++ b/semantic_val/datamodules/datasets/SemValBuildings202110.py
@@ -136,7 +136,13 @@ def make_datasplit_csv(
     df = get_metadata_df_from_shapefile(shapefile_filepath)
     df_split = get_splitted_SemValBuildings202110(df, train_frac=train_frac)
     df_split = create_full_filepath_column(df_split, lasfiles_dir)
-    assert all(osp.exists(filepath) for filepath in df_split.file_path)
+    file_not_found_index_list = []
+    for filepath in df_split.file_path:
+        if not osp.exists(filepath):
+            log.warning("file specified but not found, removing {0} from the list (index {1})"\
+                .format(filepath, df_split.index[df_split["file_path"]==filepath].tolist()))
+            file_not_found_index_list += df_split.index[df_split["file_path"]==filepath].tolist()
+    df_split.drop(labels=file_not_found_index_list, inplace=True)
     df_split.to_csv(datasplit_csv_filepath, index=False)
 
 
-- 
2.25.1

